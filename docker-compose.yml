services:
  fastify-image:
    container_name: fastify-image
    image: fastify-image
    networks:
      - app-network
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./pong-fastify:/app
      - ./vite_pong/dist:/app/vite_pong/dist
    working_dir: /app
    command: ["npm", "run", "dev"]

  caddy-image:
    container_name: caddy-image
    networks:
      - app-network
    image: caddy:latest
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./vite_pong/dist:/usr/share/caddy
  user:
    build: 
      context: ./backend
      dockerfile: services/user/Dockerfile
    ports:
      - "${USER_SERVICE_PORT}:4001"
      - "9231:9231"
    volumes:
      - ./backend/db:/app/db
    restart: always
    networks:
      - app-network
    env_file: .env

  game:
    build:
      context: ./backend
      dockerfile: services/game/Dockerfile
    ports:
      - "${GAME_SERVICE_PORT}:4002"
      - "9232:9232"
    volumes:
      - ./backend/db:/app/db
    restart: always
    networks:
      - app-network
    env_file: .env

  matchmaking:
    build:
      context: ./backend
      dockerfile: services/matchmaking/Dockerfile
    ports:
    - "${MATCHMAKING_SERVICE_PORT}:4003"
    - "9229:9229"
    volumes:
      - ./backend/db:/app/db
    restart: always
    networks:
    - app-network
    env_file: .env

  gateway:
    build:
      context: ./backend
      dockerfile: gateway/Dockerfile
    ports:
      - "${GATEWAY_SERVICE_PORT}:4000"
      - "9230:9230"
    depends_on:
      - user
      - game
      - matchmaking
    networks:
      - app-network
    env_file: .env

networks:
  app-network:
    driver: bridge
